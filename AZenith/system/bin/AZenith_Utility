#!/bin/sh

MODDIR=${0%/*}
logpath="/data/AZenith/AZenith.log"

AZLog() {
    local timestamp
    timestamp=$(date +'%Y-%m-%d %H:%M:%S')
    local message="$1"
    echo "$timestamp - $message" >> "$logpath"
    echo "$timestamp - $message"
}
AZLog "Starting Utility..."

FSTrim() {
    AZLog "Applying FSTrim"
    for mount in /system /vendor /data /cache /metadata /odm /system_ext /product; do
        if mountpoint -q "$mount"; then
            fstrim -v "$mount"
            AZLog "Trimmed: $mount"
        else
            AZLog "Skipped (not mounted): $mount"
        fi
    done
}

SFL() {
    AZLog "Applying Surfaceflinger Latency"
    for prop in \
        "ro.surface_flinger.max_frame_buffer_acquired_buffers=5" \
        "debug.sf.early_phase_offset_ns=500000" \
        "debug.sf.early_app_phase_offset_ns=500000" \
        "debug.sf.early_gl_phase_offset_ns=1000000" \
        "debug.sf.early_gl_app_phase_offset_ns=1000000" \
        "debug.sf.high_fps_early_phase_offset_ns=1000000" \
        "debug.sf.high_fps_early_gl_phase_offset_ns=1000000" \
        "debug.sf.high_fps_late_app_phase_offset_ns=1000000" \
        "debug.sf.phase_offset_threshold_for_next_vsync_ns=1000000"; do
        resetprop -n $prop
        echo "[$(date)] Set $prop"
    done
}

DThermal() {
    AZLog "Disabling Thermal Services..."

    thermal() {
        find /system/etc/init /vendor/etc/init /odm/etc/init -type f 2>/dev/null | xargs grep -h "^service" | awk '{print $2}' | grep thermal
    }

    propfile() {
        while read -r key value; do
            resetprop -n "$key" "$value"
            echo "[$(date)] Reset $key to $value"
        done <<EOF
debug.thermal.throttle.support no
ro.vendor.mtk_thermal_2_0 0
persist.thermal_config.mitigation 0
ro.mtk_thermal_monitor.enabled false
ro.vendor.tran.hbm.thermal.temp.clr 49000
ro.vendor.tran.hbm.thermal.temp.trig 46000
vendor.thermal.link_ready 0
dalvik.vm.dexopt.thermal-cutoff 0
persist.vendor.thermal.engine.enable 0
persist.vendor.thermal.config 0
EOF
    }

    propfile

    stop thermal_core
    stop vendor.thermal-hal-2-0.mtk
    AZLog "Stopped core thermal services"

    for svc in $(thermal); do
        stop "$svc"
        AZLog "Stopped thermal service: $svc"
    done

    for thermalpr in $(pgrep thermal); do
        kill -SIGSTOP "$thermalpr"
        AZLog "Froze thermal process: $thermalpr"
    done

    for thermalinit in $(getprop | awk -F '[][]' '/init\.svc_.*thermal/ {print $2}'); do
        [ -n "$thermalinit" ] && resetprop -n "$thermalinit" ""
        AZLog "Cleared thermal init: $thermalinit"
    done

    for kill in android.hardware.thermal-service.mediatek android.hardware.thermal@2.0-service.mtk; do
        getprop | grep -q "$kill" && stop "$kill"
        thermalhwsvc=$(pidof "$kill")
        [ -n "$thermalhwsvc" ] && kill -9 "$thermalhwsvc"
        AZLog "Stopped thermal binary: $kill"
    done

    for kill2 in /vendor/bin/hw/android.hardware.thermal-service.mediatek /vendor/bin/hw/android.hardware.thermal@2.0-service.mtk; do
        if [ -f "$kill2" ]; then
            mv "$kill2" "$kill2.bak"
            echo "" > "$kill2"
            chmod 000 "$kill2"
            AZLog "Disabled thermal binary: $kill2"
        fi
    done

    for thermalprop in $(getprop | grep thermal | cut -f1 -d] | cut -f2 -d[ | grep -F init.svc.); do
        resetprop "$thermalprop" stopped
        AZLog "Reset thermal property: $thermalprop"
    done

    if [ -d "/sys/class/thermal" ]; then
        chmod 644 /sys/class/thermal/thermal_zone*/mode
        for thermalzone in /sys/class/thermal/thermal_zone*/mode; do
            [ -f "$thermalzone" ] && echo "disabled" > "$thermalzone"
            AZLog "Disabled thermal zone: $thermalzone"
        done
    fi

    [ -d "/sys/devices/virtual/thermal" ] && find /sys/devices/virtual/thermal -type f -exec chmod 000 {} +
    AZLog "Disabled virtual thermal monitoring"

    cmd thermalservice override-status 0
    AZLog "Thermal service overridden"
}

if [ -f /data/AZenith/DThermal ] && [ "$(cat /data/AZenith/DThermal)" -eq 1 ]; then
    DThermal
fi
if [ -f /data/AZenith/SFL ] && [ "$(cat /data/AZenith/SFL)" -eq 1 ]; then
    SFL
fi
if [ -f /data/AZenith/FSTrim ] && [ "$(cat /data/AZenith/FSTrim)" -eq 1 ]; then
    FSTrim
fi
if [ -f /data/AZenith/logd ] && [ "$(cat /data/AZenith/logd)" -eq 1 ]; then
    stop logd
    else
    start logd
fi

AZLog  "AZenith Utility Completed."
