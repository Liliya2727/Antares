#!/bin/sh

MODDIR=${0%/*}
logpath="/data/AZenith/AZenith.log"

AZLog() {
    if [ "$(cat /data/AZenith/logger 2>/dev/null)" = "1" ]; then
        local timestamp
        timestamp=$(date +'%Y-%m-%d %H:%M:%S')
        local message="$1"
        echo "$timestamp - $message" >> "$logpath"
        echo "$timestamp - $message"
    fi
}

load_default_governor() {
    if [ -f "$DEFAULT_GOV_FILE" ]; then
        cat "$DEFAULT_GOV_FILE"
    else
        echo "schedutil"  
    fi
}

zeshia() {
    if [ -f "$2" ]; then
        chmod 644 "$2" >/dev/null 2>&1
        echo "$1" >"$2" 2>/dev/null && AZLog "Set $2 to $1" || AZLog "Failed to set $2 to $1"
        chmod 444 "$2" >/dev/null 2>&1
    else
        AZLog "File $2 not found, skipping..."
    fi
}

divider=$(cat /data/AZenith/customFreqOffset | sed -e 's/OFF/100/' -e 's/%//g')
AZLog "the divider is $divider"
DEFAULT_GOV_FILE="/data/AZenith/custom_default_cpu_gov"
default_cpu_gov=$(load_default_governor)
AZLog "Default CPU Governor: $default_cpu_gov"

zeshia "Normal" "/data/AZenith/profiler"

# PPM Settings
if [ -d /proc/ppm ]; then
    if [ -f /proc/ppm/policy_status ]; then
        for idx in $(grep -E 'FORCE_LIMIT|PWR_THRO|THERMAL|USER_LIMIT' /proc/ppm/policy_status | awk -F'[][]' '{print $2}'); do
            zeshia "1" "/proc/ppm/policy_status"
        done
        
        for dx in $(grep -E 'SYS_BOOST' /proc/ppm/policy_status | awk -F'[][]' '{print $2}'); do
            zeshia "0" "/proc/ppm/policy_status"
        done
    fi
fi

# Power level settings
for pl in /sys/devices/system/cpu/perf; do
    zeshia 0 "$pl/gpu_pmu_enable"
    zeshia 0 "$pl/fuel_gauge_enable"
    zeshia 0 "$pl/enable"
    zeshia 1 "$pl/charger_enable"
done

# Disable DND
if [ "$(cat /data/AZenith/dnd 2>/dev/null)" -eq 1 ]; then
    cmd notification set_dnd off && AZLog "DND disabled" || AZLog "Failed to disable DND"
else
    AZLog "DND was already off."
fi


# Restore CPU Scaling Governor
for path in /sys/devices/system/cpu/cpufreq/policy*; do
    zeshia "$default_cpu_gov" "$path/scaling_governor"
    sleep 0.5
done


# Restore CPU Frequency
if [ -d /proc/ppm ]; then
    cluster=0
    for path in /sys/devices/system/cpu/cpufreq/policy*; do
        cpu_maxfreq=$(cat "$path/cpuinfo_max_freq")
        cpu_minfreq=$(cat "$path/cpuinfo_min_freq")


        new_maxfreq=$((cpu_maxfreq * divider / 100))  

        zeshia "$cluster $new_maxfreq" "/proc/ppm/policy/hard_userlimit_max_cpu_freq"
        zeshia "$cluster $cpu_minfreq" "/proc/ppm/policy/hard_userlimit_min_cpu_freq"
        ((cluster++))
        
    done
fi
for path in /sys/devices/system/cpu/*/cpufreq; do
    cpu_maxfreq=$(cat "$path/cpuinfo_max_freq")
    cpu_minfreq=$(cat "$path/cpuinfo_min_freq")

    new_maxfreq=$((cpu_maxfreq * divider / 100)) 

    zeshia "$new_maxfreq" "$path/scaling_max_freq"
    zeshia "$cpu_minfreq" "$path/scaling_min_freq"
    
done


zeshia "120" "/proc/sys/vm/vfs_cache_pressure"

# Restore UFS Governor
for path in /sys/class/devfreq/*.ufshc; do
    zeshia "simple_ondemand" "$path/governor"
    
done

# Restore Voltage Optimization Settings
for eem in EEM_DET_B EEM_DET_BL EEM_DET_L; do
    if [ -f "/data/AZenith/default_$eem" ]; then
        zeshia "$(cat /data/AZenith/default_$eem)" "/proc/eem/$eem/eem_offset"
        
    fi
done
zeshia "$(cat /data/AZenith/default_EEM_DET_CCI 2>/dev/null)" "/proc/eem/EEM_DET_CCI/eem_offset"
zeshia "$(cat /data/AZenith/default_EEMG_DET_GPU 2>/dev/null)" "/proc/eemg/EEMG_DET_GPU/eemg_offset"
zeshia "$(cat /data/AZenith/default_EEMG_DET_GPU_HI 2>/dev/null)" "/proc/eemg/EEMG_DET_GPU_HI/eemg_offset"

# Restore Power & Thermal Policies
if [ -d /proc/ppm ]; then
    for idx in $(grep -E 'PWR_THRO|THERMAL' /proc/ppm/policy_status | awk -F'[][]' '{print $2}'); do
        zeshia "$idx 1" "/proc/ppm/policy_status"
        sleep 0.5
    done
fi

# cpufreq cci
zeshia "0" "/proc/cpufreq/cpufreq_cci_mode"

zeshia "1" "/proc/cpufreq/cpufreq_power_mode"


# GPU Frequency
if [ -d /proc/gpufreq ]; then
		zeshia "0" /proc/gpufreq/gpufreq_opp_freq 2>/dev/null
elif [ -d /proc/gpufreqv2 ]; then
		zeshia "-1" /proc/gpufreqv2/fix_target_opp_index
fi

# Restore UFS governor 
zeshia "-1" "/sys/devices/platform/10012000.dvfsrc/helio-dvfsrc/dvfsrc_req_ddr_opp"

zeshia "-1" "/sys/kernel/helio-dvfsrc/dvfsrc_force_vcore_dvfs_opp"

zeshia "userspace" "/sys/class/devfreq/mtk-dvfsrc-devfreq/governor"

zeshia "userspace" "/sys/devices/platform/soc/1c00f000.dvfsrc/mtk-dvfsrc-devfreq/devfreq/mtk-dvfsrc-devfreq/governor"



	# EAS/HMP Switch
	zeshia "1" /sys/devices/system/cpu/eas/enable

	# GPU Power limiter
	[ -f "/proc/gpufreq/gpufreq_power_limited" ] && {
		for setting in ignore_batt_oc ignore_batt_percent ignore_low_batt ignore_thermal_protect ignore_pbm_limited; do
			zeshia "$setting 0" /proc/gpufreq/gpufreq_power_limited
		done
	}

	# Enable Power Budget management for new 5.x mtk kernels
	zeshia "stop 0" /proc/pbm/pbm_stop

	# Enable battery current limiter
	zeshia "stop 0" /proc/mtk_batoc_throttling/battery_oc_protect_stop

	# Eara Thermal
	zeshia "1" /sys/kernel/eara_thermal/enable
	
	sleep 0.2

# Workqueue settings
zeshia "Y" /sys/module/workqueue/parameters/power_efficient
zeshia "Y" /sys/module/workqueue/parameters/disable_numa
zeshia "1" /sys/kernel/eara_thermal/enable
zeshia "1" /sys/devices/system/cpu/eas/enable

zeshia "1" /sys/devices/system/cpu/cpu2/online
zeshia "1" /sys/devices/system/cpu/cpu3/online
	
for path in /dev/stune/*; do
    base=$(basename "$path")  
    if [[ "$base" == "top-app" || "$base" == "foreground" ]]; then
        zeshia 0 "$path/schedtune.boost"
        zeshia 0 "$path/schedtune.sched_boost_enabled"
    else
        zeshia 0 "$path/schedtune.boost"
        zeshia 0 "$path/schedtune.sched_boost_enabled"
    fi  
    zeshia 0 "$path/schedtune.prefer_idle"
    zeshia 0 "$path/schedtune.colocate"
done

cmd power set-fixed-performance-mode-enabled false

# Power level settings
for pl in /sys/devices/system/cpu/perf; do
    zeshia 0 "$pl/gpu_pmu_enable"
    zeshia 0 "$pl/fuel_gauge_enable"
    zeshia 0 "$pl/enable"
    zeshia 1 "$pl/charger_enable"
done

# Adaptive power saver
cmd power set-adaptive-power-saver-enabled true
cmd power set-fixed-performance-mode-enabled false

zeshia "0" /proc/perfmgr/syslimiter/syslimiter_force_disable
zeshia "stop 0" /proc/mtk_batoc_throttling/battery_oc_protect_stop

zeshia 40 /proc/sys/kernel/perf_cpu_time_max_percent
zeshia 1 /proc/sys/kernel/sched_energy_aware

for cpucore in /sys/devices/system/cpu/cpu[1-7]; do
    zeshia 0 "$cpucore/core_ctl/enable"
    zeshia 0 "$cpucore/core_ctl/core_ctl_boost"
done
sleep 0.2
# FPSGO settings
zeshia "0" /sys/kernel/fpsgo/fbt/boost_ta
zeshia "1" /sys/kernel/fpsgo/fbt/enable_switch_down_throttle
zeshia "1" /sys/kernel/fpsgo/fstb/adopt_low_fps
zeshia "1" /sys/kernel/fpsgo/fstb/fstb_self_ctrl_fps_enable
zeshia "0" /sys/kernel/fpsgo/fstb/boost_ta
zeshia "1" /sys/kernel/fpsgo/fstb/enable_switch_sync_flag
zeshia "0" /sys/kernel/fpsgo/fbt/boost_VIP
zeshia "1" /sys/kernel/fpsgo/fstb/gpu_slowdown_check
zeshia "1" /sys/kernel/fpsgo/fbt/thrm_limit_cpu
zeshia "0" /sys/kernel/fpsgo/fbt/thrm_temp_th
zeshia "0" /sys/kernel/fpsgo/fbt/llf_task_policy
zeshia "-1" /sys/kernel/ged/hal/gpu_boost_level

#  Disable battery saver module    
[ -f /sys/module/battery_saver/parameters/enabled ] && {    
	if grep -qo '[0-9]\+' /sys/module/battery_saver/parameters/enabled; then    
		zeshia 0 /sys/module/battery_saver/parameters/enabled    
	else    
		zeshia N /sys/module/battery_saver/parameters/enabled    
	fi    
}    

#  Enable split lock mitigation    
zeshia 1 /proc/sys/kernel/split_lock_mitigate    

if [ -f "/sys/kernel/debug/sched_features" ]; then    
	#  Consider scheduling tasks that are eager to run    
	zeshia NEXT_BUDDY /sys/kernel/debug/sched_features    

	#  Schedule tasks on their origin CPU if possible    
	zeshia TTWU_QUEUE /sys/kernel/debug/sched_features    
fi    

if [ -d "/dev/stune/" ]; then    
	#  We are not concerned with prioritizing latency    
	zeshia 0 /dev/stune/top-app/schedtune.prefer_idle    

	#  Mark top-app as boosted, find high-performing CPUs    
	zeshia 1 /dev/stune/top-app/schedtune.boost    
fi

sh "/data/adb/modules/AZenith/libs/bypassCharge" 
AZLog "Normal Profile applied successfully!"

exit 0