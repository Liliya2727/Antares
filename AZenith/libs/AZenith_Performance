#!/bin/sh

MODDIR=${0%/*}
logpath="/data/AZenith/AZenith.log"
game_list_filter="com.example.gamelist1|com.example.gamelist2$(awk '!/^[[:space:]]*$/ && !/^#/ && !(/[[:alnum:]]+[[:space:]]+[[:alnum:]]+[[:space:]]+[[:alnum:]]+/) {sub("-e ", ""); printf "|%s", $0}' "/data/AZenith/gamelist.txt")"

AZLog() {
    if [ "$(cat /data/AZenith/logger 2>/dev/null)" = "1" ]; then
        local timestamp
        timestamp=$(date +'%Y-%m-%d %H:%M:%S')
        local message="$1"
        echo "$timestamp - $message" >> "$logpath"
        echo "$timestamp - $message"
    fi
}


zeshia() {
    if [ -f "$2" ]; then
        chmod 644 "$2" >/dev/null 2>&1
        echo "$1" >"$2" 2>/dev/null && AZLog "Set $2 to $1" || AZLog "Failed to set $2 to $1"
        chmod 444 "$2" >/dev/null 2>&1
    else
        AZLog "File $2 not found, skipping..."
    fi
}

zeshia "Performance" "/data/AZenith/profiler"

mltweak() {
    window=$(dumpsys window)
    gamestart=$(echo "$window" | grep -E 'mCurrentFocus|mFocusedApp' | grep -Eo "$game_list_filter" | tail -n 1)
    mltwk="com.mobile.legends"
    pidml=$(pidof "$mltwk")

    if [ "$gamestart" = "$mltwk" ] && [ -n "$pidml" ]; then
        AZLog "Applying ML optimizations..."
        for pid in $pidml; do
            sleep 1
            find "/data/data/$mltwk/cache/" -type f -mtime +1 -exec rm -f {} +
            AZLog "Cleared ML cache in /data/data"
            find "/data/media/0/Android/data/$mltwk/cache/" -type f -mtime +1 -exec rm -f {} +
            AZLog "Cleared ML cache in /data/media/0"
            /system/bin/am start -a android.intent.action.MAIN -e toasttext "ML High Prior!" -n bellavita.toast/.MainActivity    
            renice -n 10 -p "$pid"
            ionice -c 1 -n 0 -p "$pid"
            chrt -f -p 99 "$pid"
        done
    else
        AZLog "ML tweak not executed - Mobile Legends is not running."
    fi
}

    if [ "$(cat /data/AZenith/mltweak 2>/dev/null)" -eq 1 ]; then
        AZLog "ML tweak enabled, executing..."
        mltweak 
    else
        AZLog "ML tweak not enabled, skipping..."
    fi


# PPM Settings
if [ -d /proc/ppm ]; then
    if [ -f /proc/ppm/policy_status ]; then
        for idx in $(grep -E 'FORCE_LIMIT|PWR_THRO|THERMAL|USER_LIMIT' /proc/ppm/policy_status | awk -F'[][]' '{print $2}'); do
            zeshia "0" /proc/ppm/policy_status
        done
        
        for dx in $(grep -E 'SYS_BOOST' /proc/ppm/policy_status | awk -F'[][]' '{print $2}'); do
            zeshia "1" /proc/ppm/policy_status
        done
    fi
fi


# Power level settings
for pl in /sys/devices/system/cpu/perf; do
    zeshia 1 "$pl/gpu_pmu_enable"
    zeshia 1 "$pl/fuel_gauge_enable"
    zeshia 1 "$pl/enable"
    zeshia 1 "$pl/charger_enable"
done


# Set DND Mode
if [ "$(cat /data/AZenith/dnd 2>/dev/null)" -eq 1 ]; then
    cmd notification set_dnd priority && AZLog "DND enabled" || AZLog "Failed to enable DND"
else
    AZLog "DND not enabled."
fi


# Scaling Governor
for path in /sys/devices/system/cpu/cpufreq/policy*; do
    zeshia "performance" "$path/scaling_governor"
    sleep 0.5  
done


# MAX CPU Frequency 
if [ "$(cat /data/AZenith/cpulimit 2>/dev/null)" -eq 1 ]; then
    if [ -d /proc/ppm ]; then
        cluster=0
        for path in /sys/devices/system/cpu/cpufreq/policy*; do
            cpu_maxfreq=$(cat "$path/cpuinfo_max_freq")
            zeshia "$cluster $cpu_maxfreq" "/proc/ppm/policy/hard_userlimit_max_cpu_freq"
            zeshia "$cluster $cpu_maxfreq" "/proc/ppm/policy/hard_userlimit_min_cpu_freq"
            ((cluster++))
        done
    fi
    for path in /sys/devices/system/cpu/*/cpufreq; do
        cpu_maxfreq=$(cat "$path/cpuinfo_max_freq")
        zeshia "$cpu_maxfreq" "$path/scaling_max_freq"
        zeshia "$cpu_maxfreq" "$path/scaling_min_freq"
        zeshia "cpu$(awk '{print $1}' "$path/affected_cpus") $cpu_maxfreq" "/sys/devices/virtual/thermal/thermal_message/cpu_limits"
        sleep 0.5
    done
fi

# Cache Pressure 
zeshia "80" "/proc/sys/vm/vfs_cache_pressure"

# Disable Volt Optimizer
if [ "$(cat /data/AZenith/VoltOpt 2>/dev/null)" -eq 1 ]; then
    for eem in EEM_DET_B EEM_DET_BL EEM_DET_L; do
        zeshia "0" "/proc/eem/$eem/eem_offset"
    done
    zeshia "0" "/proc/eem/EEM_DET_CCI/eem_offset"
    zeshia "0" "/proc/eemg/EEMG_DET_GPU/eemg_offset"
    zeshia "0" "/proc/eemg/EEMG_DET_GPU_HI/eemg_offset"
    AZLog "Voltage Optimization applied."
else
    AZLog "Voltage Optimization not enabled."
fi

# CPU Power Mode
zeshia "1" "/proc/cpufreq/cpufreq_cci_mode"
zeshia "3" "/proc/cpufreq/cpufreq_power_mode"

# GPU Frequency
if [ -d /proc/gpufreq ]; then
		gpu_freq="$(cat /proc/gpufreq/gpufreq_opp_dump | grep -o 'freq = [0-9]*' | sed 's/freq = //' | sort -nr | head -n 1)"
		zeshia "$gpu_freq" /proc/gpufreq/gpufreq_opp_freq
elif [ -d /proc/gpufreqv2 ]; then
		zeshia 0 /proc/gpufreqv2/fix_target_opp_index
fi
	
# UFS Governor's
zeshia "0" "/sys/devices/platform/10012000.dvfsrc/helio-dvfsrc/dvfsrc_req_ddr_opp"
zeshia "0" "/sys/kernel/helio-dvfsrc/dvfsrc_force_vcore_dvfs_opp"
zeshia "performance" "/sys/class/devfreq/mtk-dvfsrc-devfreq/governor"
zeshia "performance" "/sys/devices/platform/soc/1c00f000.dvfsrc/mtk-dvfsrc-devfreq/devfreq/mtk-dvfsrc-devfreq/governor"
for path in /sys/class/devfreq/*.ufshc; do
    zeshia "performance" "$path/governor"
    sleep 0.5
done

zeshia "3" "/proc/sys/vm/drop_caches"

	# EAS/HMP Switch
	zeshia "0" /sys/devices/system/cpu/eas/enable

	# Disable GPU Power limiter
	[ -f "/proc/gpufreq/gpufreq_power_limited" ] && {
		for setting in ignore_batt_oc ignore_batt_percent ignore_low_batt ignore_thermal_protect ignore_pbm_limited; do
			zeshia "$setting 1" /proc/gpufreq/gpufreq_power_limited
		done
	}

	# Disable battery current limiter
	zeshia "stop 1" /proc/mtk_batoc_throttling/battery_oc_protect_stop

	# Eara Thermal
	zeshia "0" /sys/kernel/eara_thermal/enable
	
# Workqueue settings
zeshia "N" /sys/module/workqueue/parameters/power_efficient
zeshia "N" /sys/module/workqueue/parameters/disable_numa
zeshia "0" /sys/kernel/eara_thermal/enable
zeshia "0" /sys/devices/system/cpu/eas/enable

zeshia "1" /sys/devices/system/cpu/cpu2/online
zeshia "1" /sys/devices/system/cpu/cpu3/online
	
# GED parameters
ged_params="ged_smart_boost 1
boost_upper_bound 100
enable_gpu_boost 1
enable_cpu_boost 1
ged_boost_enable 1
boost_gpu_enable 1
gpu_dvfs_enable 1
gx_frc_mode 1
gx_dfps 1
gx_force_cpu_boost 1
gx_boost_on 1
gx_game_mode 1
gx_3D_benchmark_on 1
gpu_loading 0
cpu_boost_policy 1
boost_extra 1
is_GED_KPI_enabled 0"

zeshia "$ged_params" | while read -r param value; do
    zeshia "$value" "/sys/module/ged/parameters/$param"
done

for path in /dev/stune/*; do
    base=$(basename "$path")  
    if [[ "$base" == "top-app" || "$base" == "foreground" ]]; then
        zeshia 30 "$path/schedtune.boost"
        zeshia 1 "$path/schedtune.sched_boost_enabled"
    else
        zeshia 30 "$path/schedtune.boost"
        zeshia 1 "$path/schedtune.sched_boost_enabled"
    fi  
    zeshia 0 "$path/schedtune.prefer_idle"
    zeshia 0 "$path/schedtune.colocate"
done

cmd power set-fixed-performance-mode-enabled true

# Power level settings
for pl in /sys/devices/system/cpu/perf; do
    zeshia 1 "$pl/gpu_pmu_enable"
    zeshia 1 "$pl/fuel_gauge_enable"
    zeshia 1 "$pl/enable"
    zeshia 1 "$pl/charger_enable"
done

# Adaptive power saver
cmd power set-adaptive-power-saver-enabled false
cmd power set-fixed-performance-mode-enabled true

zeshia "0" /proc/perfmgr/syslimiter/syslimiter_force_disable
zeshia "stop 1" /proc/mtk_batoc_throttling/battery_oc_protect_stop

zeshia 3 /proc/sys/kernel/perf_cpu_time_max_percent
zeshia 1 /proc/sys/kernel/sched_energy_aware

for cpucore in /sys/devices/system/cpu/cpu[1-7]; do
    zeshia 0 "$cpucore/core_ctl/enable"
    zeshia 0 "$cpucore/core_ctl/core_ctl_boost"
done

# MTK FPSGo advanced parameters
for param in boost_affinity boost_LR gcc_hwui_hint; do
    zeshia "1" "/sys/module/mtk_fpsgo/parameters/$param"
done

sh "/data/adb/modules/AZenith/libs/bypassCharge" 
AZLog "Performance Profile Applied Successfully!"

exit 0