#!/bin/sh

# Log file path
LOG_FILE="/data/local/tmp/antares.log"

# Function for structured logging
log_message() {
    local level="$1"
    local message="$2"
    local timestamp
    timestamp=$(date "+%Y-%m-%d %H:%M:%S")
    echo "[$timestamp] [$level] $message" | tee -a "$LOG_FILE"
}

# Generate game list filter
game_list_filter="com.example.gamelist1|com.example.gamelist2$(awk '!/^[[:space:]]*$/ && !/^#/ && !(/[[:alnum:]]+[[:space:]]+[[:alnum:]]+[[:space:]]+[[:alnum:]]+/) {sub("-e ", ""); printf "|%s", $0}' "/data/Antares/gamelist.txt")"

# CHECK CPU CORES
cpu_cores=$(($(nproc --all) - 1))
log_message "Detected cpu cores: $cpu_cores"

# Path to store default governor before modifying
DEFAULT_GOV_FILE="/data/local/tmp/default_cpu_gov"

# Function to retrieve current CPU governor
get_default_governor() {
    for path in /sys/devices/system/cpu/cpufreq/policy*; do
        cat "$path/scaling_governor"
        break  # Only store the governor from the first policy (assuming they are all the same)
    done
}

# Function to store the default governor
store_default_governor() {
    if [ ! -f "$DEFAULT_GOV_FILE" ]; then
        get_default_governor > "$DEFAULT_GOV_FILE"
    fi
}

# Function to retrieve the stored governor
load_default_governor() {
    if [ -f "$DEFAULT_GOV_FILE" ]; then
        cat "$DEFAULT_GOV_FILE"
    else
        echo "schedutil"  # Fallback to a common default governor
    fi
}

# Function to write values to sysfs/proc files
zeshia() {
	if [ -f $2 ]; then
		chmod 644 $2 >/dev/null 2>&1
		echo $1 >$2 2>/dev/null
		chmod 444 $2 >/dev/null 2>&1
	fi
}

change_permission() {
	if [ -f $2 ]; then
		chmod $1 $2
	fi
}

		
# Enable Game Mode
startgamemode() {
    log_message "INFO" "Enabling Game Mode: $gamestart"
    
    store_default_governor  # Store default governor before modifying
    sleep 2

    # Force CPU to Performance Mode
    log_message "INFO" "Setting CPU governor to 'performance' mode"
    for path in /sys/devices/system/cpu/cpufreq/policy*; do
        zeshia performance "$path/scaling_governor"
    done &
    
    log_message "INFO" "Setting CPU to maximum frequency..."
    if [ -d /proc/ppm ]; then
        cluster=0
        for path in /sys/devices/system/cpu/cpufreq/policy*; do
            cpu_maxfreq=$(cat "$path/cpuinfo_max_freq")
            zeshia "$cluster $cpu_maxfreq" /proc/ppm/policy/hard_userlimit_max_cpu_freq
            zeshia "$cluster $cpu_maxfreq" /proc/ppm/policy/hard_userlimit_min_cpu_freq
            ((cluster++))
        done
    fi
    sleep 4

    change_permission 644 /sys/devices/virtual/thermal/thermal_message/cpu_limits
    for path in /sys/devices/system/cpu/*/cpufreq; do
        cpu_maxfreq=$(cat "$path/cpuinfo_max_freq")
        zeshia "$cpu_maxfreq" "$path/scaling_max_freq"
        zeshia "$cpu_maxfreq" "$path/scaling_min_freq"
        zeshia "cpu$(awk '{print $1}' "$path/affected_cpus") $cpu_maxfreq" /sys/devices/virtual/thermal/thermal_message/cpu_limits
    done
    change_permission 000 /sys/devices/virtual/thermal/thermal_message/cpu_limits
    log_message "INFO" "CPU max frequency set successfully."

    # Memory Tweaks
    log_message "INFO" "Applying memory optimizations..."
    zeshia 80 /proc/sys/vm/vfs_cache_pressure

    # UFS Governor
    for path in /sys/class/devfreq/*.ufshc; do
        zeshia performance "$path/governor"
    done &
    log_message "INFO" "UFS Governor set to 'performance' mode"

    # EEM and EEMG Tweaks
    log_message "INFO" "Disabling EEM and EEMG offsets..."
    for eem in EEM_DET_B EEM_DET_BL EEM_DET_L; do
        zeshia "0" "/proc/eem/$eem/eem_offset"
        zeshia "0" "/proc/eem/EEM_DET_CCI/eem_offset"
        zeshia "0" "/proc/eemg/EEMG_DET_GPU/eemg_offset"
        zeshia "0" "/proc/eemg/EEMG_DET_GPU_HI/eemg_offset"
    done
    log_message "INFO" "EEM and EEMG offsets set to low"

    # PPM Policies
    if [ -d /proc/ppm ]; then
        log_message "INFO" "Disabling power and thermal throttling in PPM policies..."
        for idx in $(grep -E 'PWR_THRO|THERMAL' /proc/ppm/policy_status | awk -F'[][]' '{print $2}'); do
            zeshia "$idx 0" /proc/ppm/policy_status
        done
    fi
    log_message "INFO" "PPM policies disabled"

    # MTK Power and CCI Mode
    log_message "INFO" "Optimizing MTK Power and CCI mode..."
    zeshia "1" /proc/cpufreq/cpufreq_cci_mode
    zeshia "3" /proc/cpufreq/cpufreq_power_mode
    log_message "INFO" "MTK Power and CCI mode set to performance"

    # GPU Frequency
    if [ -d /proc/gpufreqv2 ]; then
        log_message "INFO" "Setting GPU frequency to maximum..."
        zeshia 0 /proc/gpufreqv2/fix_target_opp_index
    fi
    log_message "INFO" "GPU frequency set to max"

    # DRAM Frequency
    log_message "INFO" "Optimizing DRAM frequency..."
    zeshia "0" /sys/devices/platform/10012000.dvfsrc/helio-dvfsrc/dvfsrc_req_ddr_opp
    zeshia "0" /sys/kernel/helio-dvfsrc/dvfsrc_force_vcore_dvfs_opp
    zeshia "performance" /sys/class/devfreq/mtk-dvfsrc-devfreq/governor
    zeshia "performance" /sys/devices/platform/soc/1c00f000.dvfsrc/mtk-dvfsrc-devfreq/devfreq/mtk-dvfsrc-devfreq/governor
    log_message "INFO" "DRAM frequency and governor set to performance"

    # I/O Tweaks
    log_message "INFO" "Applying I/O performance tweaks..."
    for dir in /sys/block/mmcblk0 /sys/block/mmcblk1 /sys/block/sd*; do
        zeshia 32 "$dir/queue/read_ahead_kb"
    done &
    log_message "INFO" "I/O Tweaks applied"

    # Refresh Rate
    log_message "INFO" "Setting refresh rate to 120Hz..."
    service call SurfaceFlinger 1035 i32 0
    log_message "INFO" "Refresh rate set to 120Hz"

    # Cache Optimization
    log_message "INFO" "Clearing unnecessary caches..."
    zeshia 3 /proc/sys/vm/drop_caches
    log_message "INFO" "Cache cleared"

    # Final Log
    log_message "INFO" "Game Mode Optimization Process Completed!"
    log_message "INFO" "-------------------------------------"
}


# Disable Game Mode
stopgamemode() {
    log_message "INFO" "Disabling Game Mode..."

    # Restore default CPU governor
    default_cpu_gov=$(load_default_governor)
    log_message "INFO" "Restoring default CPU governor: $default_cpu_gov"
    
    for path in /sys/devices/system/cpu/cpufreq/policy*; do
        zeshia "$default_cpu_gov" "$path/scaling_governor"
    done &
    
    # Cleanup stored governor file
    rm -f "$DEFAULT_GOV_FILE"

    # Restore CPU Frequency
    log_message "INFO" "Restoring CPU frequency..."
    if [ -d /proc/ppm ]; then
        cluster=0
        for path in /sys/devices/system/cpu/cpufreq/policy*; do
            cpu_maxfreq=$(cat "$path/cpuinfo_max_freq")
            cpu_minfreq=$(cat "$path/cpuinfo_min_freq")
            zeshia "$cluster $cpu_maxfreq" /proc/ppm/policy/hard_userlimit_max_cpu_freq
            zeshia "$cluster $cpu_minfreq" /proc/ppm/policy/hard_userlimit_min_cpu_freq
            ((cluster++))
        done
    fi
    sleep 1

    for path in /sys/devices/system/cpu/*/cpufreq; do
        cpu_maxfreq=$(cat "$path/cpuinfo_max_freq")
        cpu_minfreq=$(cat "$path/cpuinfo_min_freq")
        zeshia "$cpu_maxfreq" "$path/scaling_max_freq"
        zeshia "$cpu_minfreq" "$path/scaling_min_freq"
    done

    change_permission 644 /sys/devices/virtual/thermal/thermal_message/cpu_limits
    log_message "INFO" "CPU frequency restored successfully."

    # Memory Tweaks
    log_message "INFO" "Restoring memory optimizations..."
    zeshia 120 /proc/sys/vm/vfs_cache_pressure

    # UFS Governor
    log_message "INFO" "Restoring UFS Governor..."
    for path in /sys/class/devfreq/*.ufshc; do
        zeshia simple_ondemand "$path/governor"
    done &

    # Voltage Optimization (EEM & EEMG)
    log_message "INFO" "Applying voltage optimizer settings..."
    for eem in EEM_DET_B EEM_DET_BL EEM_DET_L; do
        zeshia "-9" "/proc/eem/$eem/eem_offset"
        zeshia "-7" "/proc/eem/EEM_DET_CCI/eem_offset"
        zeshia "-1" "/proc/eemg/EEMG_DET_GPU/eemg_offset"
        zeshia "-1" "/proc/eemg/EEMG_DET_GPU_HI/eemg_offset"
    done

    # Restore PPM Policies
    log_message "INFO" "Restoring PPM policy status..."
    if [ -d /proc/ppm ]; then
        for idx in $(grep -E 'PWR_THRO|THERMAL' /proc/ppm/policy_status | awk -F'[][]' '{print $2}'); do
            zeshia "$idx 1" /proc/ppm/policy_status
        done
    fi

    # Restore MTK Power and CCI Mode
    log_message "INFO" "Restoring MTK Power and CCI mode to default..."
    zeshia "0" /proc/cpufreq/cpufreq_cci_mode
    zeshia "1" /proc/cpufreq/cpufreq_power_mode

    # Restore GPU Frequency
    if [ -d /proc/gpufreqv2 ]; then
        log_message "INFO" "Restoring GPU frequency..."
        zeshia -1 /proc/gpufreqv2/fix_target_opp_index
    fi

    # Restore DRAM Frequency
    log_message "INFO" "Restoring DRAM frequency and governor..."
    zeshia "-1" /sys/devices/platform/10012000.dvfsrc/helio-dvfsrc/dvfsrc_req_ddr_opp
    zeshia "-1" /sys/kernel/helio-dvfsrc/dvfsrc_force_vcore_dvfs_opp
    zeshia "userspace" /sys/class/devfreq/mtk-dvfsrc-devfreq/governor
    zeshia "userspace" /sys/devices/platform/soc/1c00f000.dvfsrc/mtk-dvfsrc-devfreq/devfreq/mtk-dvfsrc-devfreq/governor

    # Restore I/O Tweaks
    log_message "INFO" "Restoring I/O tweaks to default..."
    for dir in /sys/block/mmcblk0 /sys/block/mmcblk1 /sys/block/sd*; do
        zeshia 128 "$dir/queue/read_ahead_kb"
    done &

    # Restore Refresh Rate
    log_message "INFO" "Setting refresh rate back to 60Hz..."
    service call SurfaceFlinger 1035 i32 2

    # Final Log
    log_message "INFO" "Game Mode Deactivation Process Completed!"
    log_message "INFO" "-------------------------------------"
}

# apply mode based on game detection
apply_mode() {
    # Ensure cur_mode is initialized
    if [ -z "$cur_mode" ]; then
        export cur_mode=0
    fi
    gameenabled="/data/Antares/perfflagtmp"

    if [ -f "$gameenabled" ]; then
        if [ "$1" -eq 1 ] && [ "$cur_mode" -ne 1 ]; then
            export cur_mode=1
            log_message "GAME DETECTED..."
            renice -20 -p "$pid"
            ionice -c 1 -n 0 -p "$pid"
            chrt -f -p 99 "$pid"
            sleep 2
            /system/bin/am start -a android.intent.action.MAIN -e toasttext "Applying Antares!" -n bellavita.toast/.MainActivity
            sleep 2
            startgamemode 
        elif [ "$1" -eq 0 ] && [ "$cur_mode" -ne 0 ]; then
            export cur_mode=0
            log_message "NO GAME DETECTED"
            sleep 5
            /system/bin/am start -a android.intent.action.MAIN -e toasttext "Disabling Performance Mode..." -n bellavita.toast/.MainActivity
            sleep 2
            stopgamemode
        fi
    fi
}

# Apply Zeshia Tweaks
zeshtweak() {
    log_message "INFO" "Applying Schedhorizon Tunes..."
    for policy in 0 4 7; do
        zeshia "schedhorizon" "/sys/devices/system/cpu/cpufreq/policy$policy/scaling_governor"
    done

    # CPU Core Control Tweaks
    log_message "INFO" "Applying CPU Core Control..."
    for cpu in 0 4 7; do
        zeshia "1" "/sys/devices/system/cpu/cpu$cpu/core_ctl/enable"
        zeshia "10" "/sys/devices/system/cpu/cpu$cpu/core_ctl/offline_throttle_ms"
    done

    zeshia "6" "/sys/devices/system/cpu/cpu0/core_ctl/min_cpus"
    zeshia "6" "/sys/devices/system/cpu/cpu0/core_ctl/max_cpus"
    zeshia "4" "/sys/devices/system/cpu/cpu4/core_ctl/min_cpus"
    zeshia "4" "/sys/devices/system/cpu/cpu4/core_ctl/max_cpus"
    zeshia "10" "/sys/devices/system/cpu/cpu4/core_ctl/btask_up_thresh"
    zeshia "2" "/sys/devices/system/cpu/cpu4/core_ctl/btask_down_thresh"
    zeshia "2" "/sys/devices/system/cpu/cpu7/core_ctl/min_cpus"
    zeshia "2" "/sys/devices/system/cpu/cpu7/core_ctl/max_cpus"
    zeshia "10" "/sys/devices/system/cpu/cpu7/core_ctl/btask_up_thresh"
    zeshia "2" "/sys/devices/system/cpu/cpu7/core_ctl/btask_down_thresh"
    zeshia "90" "/sys/devices/system/cpu/cpu7/core_ctl/cpu_tj_btask_thresh"

    # Kernel Panic Tweaks
    log_message "INFO" "Disabling Kernel Panic..."
    for param in panic panic_on_oops panic_on_warn softlockup_panic; do
        zeshia 0 "/proc/sys/kernel/$param"
    done

    # Voltage Optimizer
    log_message "INFO" "Applying Voltage Optimizer..."
    for eem in EEM_DET_B EEM_DET_BL EEM_DET_L; do
        zeshia "-9" "/proc/eem/$eem/eem_offset"
        zeshia "-7" "/proc/eem/EEM_DET_CCI/eem_offset"
        zeshia "-1" "/proc/eemg/EEMG_DET_GPU/eemg_offset"
        zeshia "-1" "/proc/eemg/EEMG_DET_GPU_HI/eemg_offset"
    done

    # Scheduler Tweaks
    log_message "INFO" "Applying Kernel Scheduler Tweaks..."
    zeshia 32 /proc/sys/kernel/sched_nr_migrate
    zeshia 50000 /proc/sys/kernel/sched_migration_cost_ns
    zeshia 1000000 /proc/sys/kernel/sched_min_granularity_ns
    zeshia 1500000 /proc/sys/kernel/sched_wakeup_granularity_ns
    zeshia 500000 /proc/sys/kernel/sched_migration_cost_ns
    zeshia 30 /proc/sys/kernel/perf_cpu_time_max_percent
    zeshia 256 /proc/sys/kernel/sched_nr_migrate
    zeshia 10000000 /proc/sys/kernel/sched_latency_ns
    zeshia 1024 /proc/sys/kernel/sched_util_clamp_max
    zeshia 1024 /proc/sys/kernel/sched_util_clamp_min
    zeshia 1 /proc/sys/kernel/sched_child_runs_first
    zeshia 1 /proc/sys/kernel/sched_tunable_scaling
    zeshia 0 /proc/sys/kernel/sched_energy_aware

    # Block Device Tweaks
    log_message "INFO" "Applying I/O Scheduler Tweaks..."
    for block in mmcblk0 mmcblk1 sda sdb sdc; do
        for param in add_random iostats nomerges rotational rq_affinity; do
            zeshia "0" "/sys/block/$block/queue/$param"
        done
        zeshia "64" "/sys/block/$block/queue/nr_requests"
        zeshia "128" "/sys/block/$block/queue/read_ahead_kb"
    done

    # Schedhorizon Tweaks
    log_message "INFO" "Applying Schedhorizon Frequency Tuning..."
    zeshia "50 100 200 400 600" "/sys/devices/system/cpu/cpufreq/policy0/schedhorizon/up_delay"
    zeshia "500000 850000 1250000 1450000 1800000" "/sys/devices/system/cpu/cpufreq/policy0/schedhorizon/efficient_freq"
    zeshia "50 100 200 400 600 800" "/sys/devices/system/cpu/cpufreq/policy4/schedhorizon/up_delay"
    zeshia "437000 902000 1162000 1451000 1740000 1985000" "/sys/devices/system/cpu/cpufreq/policy4/schedhorizon/efficient_freq"
    zeshia "30 50 150 300 500 700" "/sys/devices/system/cpu/cpufreq/policy7/schedhorizon/up_delay"
    zeshia "480000 1200000 1600000 1800000 2200000 2400000" "/sys/devices/system/cpu/cpufreq/policy7/schedhorizon/efficient_freq"

    # Additional Kernel Tweaks
    log_message "INFO" "Applying Additional Kernel Tweaks..."
    zeshia "0 0 0 0" "/proc/sys/kernel/printk"
    zeshia "off" "/proc/sys/kernel/printk_devkmsg"
    zeshia "0" "/proc/sys/kernel/sched_schedstats"
    zeshia "20" "/proc/sys/kernel/perf_cpu_time_max_percent"

    # Disable FPSGO
    log_message "INFO" "Disabling FPSGO..."
    zeshia 0 /sys/kernel/fpsgo/common/fpsgo_enable

    # Notification Push
    log_message "INFO" "Sending Notification: Tweak Applied!"
    sleep 3
    su -lp 2000 -c "/system/bin/cmd notification post -t 'ANTARES!' -i file:///data/local/tmp/antares.png -I file:///data/local/tmp/antares.png 'antares' 'Tweak is Applied!'"

    # Final Log
    log_message "INFO" "All Tweaks Applied Successfully!"
    log_message "INFO" "Monitoring Games Started!"
    log_message "INFO" "-------------------------------------"
}

# Monitoring function for game detection
monitoring() {
	while true; do
		window=$(dumpsys window)
		gamestart=$(echo "$window" | grep -E 'mCurrentFocus|mFocusedApp' | grep -Eo "$game_list_filter" | tail -n 1)
		screenoff=$(echo "$window" | grep "mScreen" | grep -Eo "false" | tail -n 1)

		if [ -n "$gamestart" ] && [ "$screenoff" != "false" ]; then		
			pid=$(pgrep -f "$gamestart")
			apply_mode 1 # Enable Tweak
		else
			apply_mode 0 # Disable Tweak
		fi
	sleep 5
done		
}

# Start Applying Tweak
zeshtweak
sleep 3
# Start monitoring games
monitoring




#This Shell Script is OpenSource, you can edit it if you want don't forget to Credit @Zexshia